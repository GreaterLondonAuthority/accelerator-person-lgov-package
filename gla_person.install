<?php

/**
 * @file
 * Install hooks relating the the GLA Person node.
 */

/**
 * Implements hook_install()
 */
function gla_person_install($is_syncing) {
  foreach(_gla_person_get_default_role_types() as $label) {
    _gla_person_create_term($label, 'role_type');
  }
}

/**
 * Helper to check if a term exists and if not create it.
 *
 * @param string $label
 *   The term label.
 * @param string $vocabulary
 *   The term vocabulary machine name.
 *
 * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
 * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
 */
function _gla_person_create_term(string $label, string $vocabulary) {
  $manager = \Drupal::entityTypeManager()->getStorage('taxonomy_term');
  $values = [
    'name' => $label,
    'vid' => $vocabulary,
  ];

  try {
    if (!$manager->loadByProperties($values)) {
      $term = $manager->create($values);
      $term->save();
    }
  }
  catch (Exception $e) {
    watchdog_exception('error', $e);
  }
}

/**
 * Helper to return the role types.
 *
 * @return string[]
 *   And array of role type names.
 */
function _gla_person_get_default_role_types() {
  return [
    'Assembly Member',
    'Mayoral Special Appointment',
    'Deputy Mayor',
    'Executive Director',
    'Mayoral Advisor',
    'Mayor',
    'Assistant Director',
    'Official Spokesperson',
    'Head of Service',
    'Chief Executive',
  ];
}
